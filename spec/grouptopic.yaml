GroupTopicPathById:
  get:
    tags:
      - GroupTopic
    summary: Get a group topic by id
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: An object representing the group topic requested
        content:
            application/json:
              schema:
                $ref: '../schemas/grouptopic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
  patch:
    tags:
      - GroupTopic
    summary: Update a group topic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - body
            properties:
              name:
                description: Set the name of group topic
                type: string
              body:
                description: Set the body of group topic
                type: string 
    responses:
      '200':
        description: Updated a group topic
        content:
            application/json:
              schema:
                $ref: '../schemas/grouptopic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
  delete:
    tags:
      - GroupTopic
    summary: Delete Group Topic by id
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: id of the deleted Group Topic
        content:
            application/json:
              schema:
                type: number
                example: 2
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathPin:
  post:
    tags:
      - GroupTopic
    summary: Pin the group topic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: Pinned topic
        content:
            application/json:
              schema:
                $ref: '../schemas/group_schemas/topic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
  delete:
    tags:
      - GroupTopic
    summary: Unpin the group topic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: Unpinned topic
        content:
            application/json:
              schema:
                $ref: '../schemas/group_schemas/topic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathWatch:
  post:
    tags:
      - GroupTopic
    summary: Watch the group topic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: Watched topic
        content:
            application/json:
              schema:
                $ref: '../schemas/group_schemas/topic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
  delete:
    tags:
      - GroupTopic
    summary: Unwatch the group topic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: Unwatched topic
        content:
            application/json:
              schema:
                $ref: '../schemas/group_schemas/topic_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathComments:
  get:
    tags:
      - GroupTopic
    summary: Get all comments for this topic in a quick pre-threaded view
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic
        schema:
          type: number
          example: 2
    responses:
      '200':
        description: The list of group members.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/comment_schema.yaml' 
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
  post:
    tags:
      - GroupTopic
    summary: Post a comment
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the group topic to comment on
        schema:
          type: number
          example: 2
    requestBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - body
            properties:
              body:
                description: Set the body of the comment
                type: string
    responses:
      '200':
        description: The newly created comment
        content:
          application/json:
            schema:
              $ref: '../schemas/comment_schema.yaml'
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathForumTopicsComments:
  get:
    tags:
      - GroupTopic
    summary: Get list topics and comments of a certain forum
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the forum
        schema:
          type: number
          example: 2
      - in: query
        name: search
        required: false
        description: The search query to perform
        schema:
          type: string
          example: 3d
      - in: query
        name: page
        required: false
        description: The page number to perform request
        schema:
          type: number
          example: 1
      - in: query
        name: per_page
        required: false
        description: The number of items we want to receive in response
        schema:
          type: number
          example: 5
    responses:
      '200':
        description: An object representing the forum topics and comments requested
        content:
          application/json:
            schema:
              type: object
              properties:
                topics_comments:
                  type: array
                  items:
                    oneOf:
                      - $ref: '../schemas/grouptopic_schema.yaml'
                      - $ref: '../schemas/comment_schema.yaml'
                total:
                  type: number
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathRootComments:
  get:
    tags:
      - GroupTopic
    summary: Get an unthreaded paginated list of root comment objects
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the topic to get root comments for
        schema:
          type: number
          example: 1004996
    responses:
      '200':
        description: An array containing a list of root comments on this topic
        content:
            application/json:
              schema:
                type: array
                example: []
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
GroupTopicPathUpdate:
  post:
    tags:
      - GroupTopic
    summary: Update GroupTopic
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: The id of the topic to update
        schema:
          type: number
          example: 1004996
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                description: Set the name of the topic
                type: string
              body:
                description: Set the body of the topic
                type: string
              tags:
                description: Set the category of the thing. Uses full category name (eg. "3D Printer Parts")
                type: array
                example: ["tag1", "tag2", "tag3"]
              filenames:
                description: Array of names of the files
                type: array
                example: ["File1.jpg", "File2.jpg"]
              files:
                description: Array of files
                type: array
                example: ["File1.jpg", "File2.jpg"]
              attachments:
                description: Array of atachments ids to update
                type: array
                example: ["80111"]
    responses:
      '200':
        $ref : "../responses/ok.yaml"
      '401':
        $ref : "../responses/unauthorized.yaml"
      '403':
        $ref : "../responses/forbidden.yaml"
      '404':
        $ref : "../responses/not_found.yaml"
